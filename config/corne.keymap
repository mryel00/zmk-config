/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    // https://zmk.dev/docs/behaviors/hold-tap#example-use-cases
    // https://github.com/qmk/qmk_firmware/blob/master/docs/tap_hold.md#default-mode

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        uml_a: uml_a {
            compatible = "zmk,behavior-mod-morph";
            label = "UML_A";
            bindings = <&kp RA(A)>, <&kp RA(RC(Q))>;

            #binding-cells = <0>;
            mods = <(MOD_RCTL)>;
        };

        uml_u: uml_u {
            compatible = "zmk,behavior-mod-morph";
            label = "UML_U";
            bindings = <&kp LA(U)>, <&kp LA(LC(Y))>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        uml_o: uml_o {
            compatible = "zmk,behavior-mod-morph";
            label = "UML_O";
            bindings = <&kp LA(O)>, <&kp LA(LC(SEMI))>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        macro_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        discord_mute: discord_mute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RS(F24)>;
            label = "DISCORD_MUTE";
        };

        discord_scrnshare: discord_scrnshare {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(F24)>;
            label = "DISCORD_SCRNSHARE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
            // | CTRL |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |  '   |
            // | SHFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB   &kp Q       &kp W       &kp F        &kp P        &kp B        &kp J    &kp L        &kp U        &kp Y       &kp SEMI    &kp BSPC
&kp BSPC  &hm LGUI A  &hm LALT R  &hm LSHFT S  &hm LCTRL T  &kp G        &kp M    &hm RCTRL N  &hm RSHFT E  &hm RALT I  &hm RGUI O  &kp SQT
&kp DEL   &kp Z       &kp X       &kp C        &kp D        &kp V        &kp K    &kp H        &kp COMMA    &kp DOT     &kp FSLH    &kp ESC
                                  &kp LGUI     &mo 1        &kp SPACE    &kp RET  &mo 2        &kp RALT
            >;
        };

        symbols_number_layer {
            // -----------------------------------------------------------------------------------------
            // |  @  |  \  |  (  |  {  |  [  |  %  |                        |  $  |  7  |  8  |  9  |  ^  |     |
            // |  *  |  !  |  +  |  -  |  =  |  &  |                        |  .  |  4  |  5  |  6  |  0  |  Â´  |
            // |     |  #  |  )  |  }  |  ]  | "|" |                        |  ,  |  1  |  2  |  3  |  _  |     |
            //                   | GUI |     | SPC |                        | ENT |     | ALT |

            bindings = <
&kp AT      &kp BSLH  &kp LPAR   &kp LBKT  &kp LBRC   &kp PRCNT    &kp DLLR   &kp N7  &kp N8    &kp N9  &kp CARET  &trans
&kp STAR    &kp EXCL  &kp MINUS  &kp PLUS  &kp EQUAL  &kp AMPS     &kp DOT    &kp N4  &kp N5    &kp N6  &kp N0     &trans
&caps_word  &kp HASH  &kp RPAR   &kp RBKT  &kp RBRC   &kp PIPE     &kp COMMA  &kp N1  &kp N2    &kp N3  &kp UNDER  &trans
                                 &kp LGUI  &trans     &kp SPACE    &kp RET    &trans  &kp RALT
            >;
        };

        nav_fn_layer {
            bindings = <
&none  &kp PG_UP  &kp HOME    &kp UP            &kp END     &none                &none                &kp F7  &kp F8  &kp F9  &kp F12  &none
&none  &kp PG_DN  &kp LEFT    &kp DOWN          &kp RIGHT   &kp K_APPLICATION    &none                &kp F4  &kp F5  &kp F6  &kp F11  &none
&none  &none      &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &none                &kp LC(PRINTSCREEN)  &kp F1  &kp F2  &kp F3  &kp F10  &none
                              &none             &none       &none                &none                &none   &none
            >;
        };

        macro_layer {
            bindings = <
&to 4  &none  &none  &none  &none  &none    &none  &none          &none               &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &discord_mute  &discord_scrnshare  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none          &none               &none  &none  &none
                     &none  &none  &none    &none  &none          &none
            >;
        };

        gaming_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D  &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &sl 6  &sl 5  &kp SPACE    &kp RET  &to 0  &kp RALT
            >;
        };

        gaming2_layer {
            // -----------------------------------------------------------------------------------------
            // |     |  6  |  7  |   8    |  9  |  0  |        |   |   |   |   |   |   |
            // |     |  1  |  2  |   3    |  4  |  5  |        |   |   |   |   |   |   |
            // |     |     |     | "Play" |     |     |        |   |   |   |   |   |   |
            //                   |  GUI  |     | SPC |           |   |   |   |

            bindings = <
&trans  &kp N6  &kp N7  &kp N8            &kp N9  &kp N0       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp N1  &kp N2  &kp N3            &kp N4  &kp N5       &trans  &trans  &trans  &trans  &trans  &trans
&trans  &none   &none   &kp C_PLAY_PAUSE  &none   &none        &trans  &trans  &trans  &trans  &trans  &trans
                        &kp LGUI          &trans  &kp SPACE    &trans  &trans  &trans
            >;
        };

        gaming3_layer {
            bindings = <
&kp ESC  &kp Y  &kp U  &kp I      &kp O    &kp P       &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp H  &kp J  &kp K      &kp L    &kp SEMI    &trans  &trans  &trans  &trans  &trans  &trans
&trans   &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH    &trans  &trans  &trans  &trans  &trans  &trans
                       &kp RET    &mo 2    &kp RALT    &trans  &trans  &trans
            >;
        };
    };
};
